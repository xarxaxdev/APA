#############################################################################
# Makefile for building: libmytextplugin.so
# Generated by qmake (2.01a) (Qt 4.8.6) on: Wed Dec 16 14:29:13 2015
# Project:  ../mytext/mytext.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_PLUGIN -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQDESIGNER_EXPORT_WIDGETS -DQT_SHARED
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I../mytext -I/usr/include/QtDesigner -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include/QtScript -I/usr/include -Irelease -I../mytext -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L. -lQtScript -L/usr/lib -lQtXml -lQtGui -L/usr/X11R6/lib -lQtCore -lQtDesigner -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = ../mytext/mytextplugin.cpp \
		../mytext/mytext.cpp release/moc_mytextplugin.cpp \
		release/moc_mytext.cpp \
		release/qrc_icons.cpp
OBJECTS       = release/mytextplugin.o \
		release/mytext.o \
		release/moc_mytextplugin.o \
		release/moc_mytext.o \
		release/qrc_icons.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../mytext/mytext.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/designer.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/dll.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		../mytext/mytext.pro
QMAKE_TARGET  = mytextplugin
DESTDIR       = 
TARGET        = libmytextplugin.so
TARGETD       = libmytextplugin.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile.Release ../mytext/mytext.pro

dist: 
	@$(CHK_DIR_EXISTS) release/mytextplugin1.0.0 || $(MKDIR) release/mytextplugin1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/mytextplugin1.0.0/ && $(COPY_FILE) --parents ../mytext/mytextplugin.h ../mytext/mytext.h release/mytextplugin1.0.0/ && $(COPY_FILE) --parents ../mytext/icons.qrc release/mytextplugin1.0.0/ && $(COPY_FILE) --parents ../mytext/mytextplugin.cpp ../mytext/mytext.cpp release/mytextplugin1.0.0/ && (cd `dirname release/mytextplugin1.0.0` && $(TAR) mytextplugin1.0.0.tar mytextplugin1.0.0 && $(COMPRESS) mytextplugin1.0.0.tar) && $(MOVE) `dirname release/mytextplugin1.0.0`/mytextplugin1.0.0.tar.gz . && $(DEL_FILE) -r release/mytextplugin1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mytextplugin.cpp release/moc_mytext.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_mytextplugin.cpp release/moc_mytext.cpp
release/moc_mytextplugin.cpp: ../mytext/mytextplugin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../mytext/mytextplugin.h -o release/moc_mytextplugin.cpp

release/moc_mytext.cpp: ../mytext/mytext.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../mytext/mytext.h -o release/moc_mytext.cpp

compiler_rcc_make_all: release/qrc_icons.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_icons.cpp
release/qrc_icons.cpp: ../mytext/icons.qrc
	/usr/bin/rcc -name icons ../mytext/icons.qrc -o release/qrc_icons.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

release/mytextplugin.o: ../mytext/mytextplugin.cpp ../mytext/mytext.h \
		../mytext/mytextplugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mytextplugin.o ../mytext/mytextplugin.cpp

release/mytext.o: ../mytext/mytext.cpp ../mytext/mytext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mytext.o ../mytext/mytext.cpp

release/moc_mytextplugin.o: release/moc_mytextplugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_mytextplugin.o release/moc_mytextplugin.cpp

release/moc_mytext.o: release/moc_mytext.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_mytext.o release/moc_mytext.cpp

release/qrc_icons.o: release/qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_icons.o release/qrc_icons.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/qt4/plugins/designer/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

